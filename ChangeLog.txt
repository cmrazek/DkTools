DkTools ChangeLog
____________________________________________________________________________________________________
Version 1.5.4 - (WIP):

- Loading of DK settings and dictionary now done on background thread when VS starts.
- Typing ':' in a string no longer causes the line to be reindented.
- Improved auto-completion when typing certain characters.
- Fixed infinite loop in code model when select statement has words with capital letters.

____________________________________________________________________________________________________
Version 1.5.3 - Aug 28, 2019:

- Fixed bug where auto-completion was triggering inside comments or strings.

____________________________________________________________________________________________________
Version 1.5.2 - Aug 26, 2019:

- Quick Info (hover text), Auto-Completion, and Signature Help are now syntax highlighted.
- QuickInfo uses the new asynchronous API.
- Fixed issue with Visual Studio putting a lock on the dictionary.
  (caused compile to fail if there are dictionary changes)
- Improved the colors of some text in dark mode.
- Fixed many warnings which would potentially cause deadlocks.

____________________________________________________________________________________________________
Version 1.5.1 - Aug 14, 2019:

- Migrated to Visual Studio 2017

____________________________________________________________________________________________________
Version 1.4.4 - Oct 5, 2018:

- Fixed infinite loop in preprocessor when using recursive #defines with missing definitions.
- Class names are no longer case sensitive.
- Code Analysis - Fixed class methods not detected when used in the same class file.

____________________________________________________________________________________________________
Version 1.4.3 - Apr 23, 2018:

- Code Analysis - Fixed bug when accessing a substring [x,y] for an array of strings.
- Code Analysis - Fixed enum parsing errors
- Fixed bug in regions which would break a region if it was surrounded by comments.
- Fixed null reference bug in casting
- Fixed bug in preprocessor when passing string literals into macros.

____________________________________________________________________________________________________
Version 1.4.2 - Feb 9, 2018:

- Added new DK menu command "Clear Errors"
- Added toolbar button and keyboard shortcut to get to this dictionary viewer.
- Added missing implicit columns on relationship tables (e.g. custjnt)
- Fix incorrectly named implicit column on snapshot tables (e.g. rowno_dmdr_dmd)
- Fixed comment/uncomment block which would sometimes remove empty lines or mess up indenting.
- Code Analysis - Stop reporting 'Function does not return a value' on staticinitialize()
- Added support for 'footer' statements
- Added support for 'like' casting that use temporary extracts
- Fixed preprocessor bug when #define has trailing spaces
- Fixed null reference bug in background scanning

____________________________________________________________________________________________________
Version 1.4.1 - Jan 30, 2018:

- Code Analysis - Fixed casting not changing the data type properly.
- Code Analysis - Fixed infinite loop for function calls that are not terminated properly.
- Fixed intellisense data types detected from ternary statements.
- Fixed SQL bug in background scanning which prevented old ACM profiles from being purged.

____________________________________________________________________________________________________
Version 1.4 - Mar 7, 2017:

- Added static code analysis
- Changed database from SQLCE to SQLite since SQLCE is no longer supported by Microsoft.
- When viewing include files, common definitions from parent files are now shown.
- When using 'go to definition' on an extern function, it will now go directly to the function
  definition instead of prompting with a list including the externs.
- Searching in the Dictionary tab of DK Explorer now works with indexes and relationships.
- Added missing snapshot tables and time relationship columns.

____________________________________________________________________________________________________
Version 1.3.5 - Feb 17, 2017:

- Added descriptions and argument names for built-in WBDK functions.
- Fixed signature help when typing a comma in a function call.
- Added better support for interfaces.
- Fixed null reference exception when parsing some create time relationship statements.
- Fixed uncomment block deleting /*..*/ style comments that existed previously.

____________________________________________________________________________________________________
Version 1.3.4 - Sep 14, 2016:

- Added support for 'dark' and 'blue' Visual Studio themes.
- Added missing implicit columns to time relationship history tables (e.g. dmhi, lohi, tehi)
- Added better support for comment/uncomment block.
- Fixed code modeling issue when extract fields contain casts.
- Enum option values will now be detected when they occur after a cast.

____________________________________________________________________________________________________
Version 1.3.3 - Aug 19, 2016:

- Fixed infinite loop in dict parsing that may occur under some conditions.

____________________________________________________________________________________________________
Version 1.3.2 - May 30, 2016:

- Fixed errors when an ACM source/include/lib directory does not exist yet.
- Improved signature help to use better argument detection.
- Added support for 'page' keyword.
- Fixed missing indexes/relationships in Dictionary Explorer.
- Added 'Go To Definition' context menu item on all items in Dictionary Explorer.
- Background FEC is now only run for files within the current ACM profile.
- When 'FEC to Visual C' fails, it will now show the errors reported by FEC.exe rather than just
  stating that it returned exit code 1.

____________________________________________________________________________________________________
Version 1.3.1 - Apr 25, 2016:

- Added support for permanent extracts.
- Function signatures with enums now show the data type name rather than dumping the entire list.
- Fixed issue with background scanning being disabled by default.
- Added support for widthof()
- Added support for public, private and protected keywords in classes.

____________________________________________________________________________________________________
Version 1.3 - Mar 28, 2016:

- Enhanced code modeling to provide better statement completion and enum option detection.
- The dictionary is now parsed rather than relying on the DRV. This allows tables and columns to be
  detected before the first compile.
- Added better support for dictionary 'create' statements.
- Find All References now works with constants and data types.
- Improved performance when loading background scanner database.
- An error is now reported when the compile fails due to SAM/CAM still open in background.
- Improved background FEC so that it will no longer hard-crash a running compile.
- The DICT file is no longer scanned by the background scanner. (it takes a long time and was never
  used anyway)

____________________________________________________________________________________________________
Version 1.2.23 - Jan 26, 2016:

- Fixed error during autocompletion of some return statements.
- Fixed problem with function not being detected when the '}' is the last character in the file.
- Fixed select 'desc' or 'asc' not highlighted when following index/relationship name.
- Preprocessor parsing now detects concatenated string literals.
- Fixed autocompletion on #include's.
- Background scan now purges nonexistent DK applications.
- Expanded maximum size of background scan database.

____________________________________________________________________________________________________
Version 1.2.22 - Jan 4, 2016:

- Compile errors are now displayed in the code and task list.
- DICT no longer has syntax highlighting (was reaaaaly slow)
- Added easyview tag

____________________________________________________________________________________________________
Version 1.2.20 - Mar 19, 2015:

- Fixed unhandled exception while typing a select statement.
- 'signed' is now recognized as a data type keyword.
- Fixed issue with /*..*/ comments on the first line not tracking their state properly.

____________________________________________________________________________________________________
Version 1.2.19 - Feb 23, 2015:

- Added support for the Find All References command (available in context menu).
- Added Find All References context menu commands to all items in the Dictionary Explorer.
- DK background scanner now scans all files and keeps track of references to external items.

____________________________________________________________________________________________________
Version 1.2.18 - Jan 19, 2015:

Features:
- Added missing _WINDOWS macro.
- Added aggregate functions sum, count, avg, max and min.
- Added better support for 'alter' statements.
- Added a setting to disable auto-scrolling of the function list when items are selected.

Bug Fixes:
- Fixed spelling mistake in options.
- Fixed the 'by' in a select's 'order by' not being highlighted when there's no where clause.
- Fixed highlighting of 'from' in a select when a 'select name' is used.
- Signature help no longer pops up when typing inside a '//' comment.

____________________________________________________________________________________________________
Version 1.2.17 - Jan 12, 2015:

Features:
- In this dictionary explorer, fields can now be filtered by using 'table.field' syntax.
  For example, if you enter 'cust.name', it'll show the field cust.name; whereas before you had to
  enter 'name' and it would display every other field in the system containing 'name'.
  (you can also just type 'name', if you want to)
- Added built-in functions 'createobject', 'releaseobject' and 'vstring'
- Added better support for keywords on specific types of statements such as select, create,
  interface, format, onerror.

Bug Fixes:
- Fixed issues with text copied to the clipboard not properly highlighting string literals.
- Tables no longer show up twice in statement completion.
- Signature help is no longer triggered if typing inside a comment or string literal.
- Fixed problems with interface data type parsing and added support for multiple methods with the
  same name.
- Clicking the DK Explorer refresh button now refreshes the editor windows as well.

____________________________________________________________________________________________________
Version 1.2.16 - Nov 30, 2014:

Features:
- Added a filterable function list on the DK Explorer
  (function drop down list doesn't let you filter by substring)

Bug Fixes:
- Fixed problem when selecting a class method, that the entire method calls (args and all) would be
  highlighted.
- Added support for the 'character' and 'varchar' data types.
- Added tooltip to the refresh button to indicate that it refreshes all WBDK environment data.
- FECing DICT no longer creates a file name with a bad file extension.

____________________________________________________________________________________________________
Version 1.2.15 - Nov 10, 2014:

Bug Fixes:
- More fixes around string literal parsing.

____________________________________________________________________________________________________
Version 1.2.14.2 - Nov 4, 2014:

Bug Fixes:
- Fixed statement completion for enums not working on class methods.

____________________________________________________________________________________________________
Version 1.2.14.1 - Nov 3, 2014:

Bug Fixes:
- Fixed syntax coloring error with empty strings ("")

____________________________________________________________________________________________________
Version 1.2.14 - Nov 3, 2014:

Bug Fixes:
- Added support for string literals that carry down to next line using '\'.
- Fixed 'unspecified error' when using 'go to definitions' on an item that takes you to the
  dictionary explorer.

____________________________________________________________________________________________________
Version 1.2.13 - Oct 27, 2014:

Bug Fixes:
- Fixed custom diag level not being applied to CAMNet.
- Fixed design mode check on Run form not being persisted.
- Fixed tags on functions not being properly parsed.
- Fixed 'go to definition' not working on functions that were defined in an include file.

____________________________________________________________________________________________________
Version 1.2.12 - Oct 20, 2014:

Features:
- Added a way to specify the diag level in Run dialog.
- Added settings to customize the arguments passed to 'pc', 'dccmp' and 'credelix'.
- Added a setting to hide certain extensions in DK Explorer.

Bug Fixes:
- On signature help for extern functions, dropped the leading 'extern'.
- Added missing data type keyword 'short'.
- Added built-in function FormatString().
- Function drop down list no longer shows functions that are defined in includes.
- Outlining no longer combines comments with blank lines between them.
- Items in the dictionary explorer can now be selected by typing.
- Fixed syntax highlighting for 'alter' statements.

____________________________________________________________________________________________________
Version 1.2.11 - Oct 14, 2014:

Features:
- Added support for interfaces.
- Dict file is now treated as DK source.
- Added funk abs()
- Added option to run CAM with designmode.

Bug Fixes:
- Fixed problem with .f function info not updating properly after being changed.
- Eliminated duplicate signature help signatures for every global function.
- Fixed problem with some .f functions with the name made entirely out of preprocessor statements
  not being detected correctly (bohipohi, pohibohi).
- Fixed bug where the compile would always fail if there are dictionary changes because DkTools was
  keeping the dictionary open as read-only.
- Misc preprocessor fixes
- Removed not-allowed return statements from staticinitialize, staticterminate, globalinitialize and
  globalterminate code snippets.

____________________________________________________________________________________________________
Version 1.2.10 - Oct 6, 2014:

Features:
- Added code snippets.
- Added extended information to the dictionary explorer.
- When changing the DK app, it will now try to change the system-wide app in the registry, but this
  will fail if VS is not running as an administrator. A message will be displayed when this happens.
- After typing 'order by', a completion list of indexes/relationships is now displayed.
- Tag names are now highlighted properly, and after typing 'tag', a completion list appears with the
  known tag names.
- Added keywords "endgroup", "tag", "nomenu" and "physical"
- Improved quick-info text for indexes.
- In dictionary explorer, indexes/relationships are now sorted alphabetically by name.

Bug Fixes:
- Fixed problem with last option being dropped off enums read from the dictionary.
- When after a multi-line comment, smart indenting will now use the indent from the first line of
  the comment, not the last line. This was causing problems with file headers causing smart
  indenting to put the cursor at 1 char.
- In Run CAM/SAM dialog, if diags are checked and CAM devmode is not, a warning will be displayed.
- Go To Next/Prev Reference commands reported the wrong reference number in the status text.
- Fixed bug where Go To Next/Prev Reference would go to the wrong position if the next reference
  was inside a collapsed section.

____________________________________________________________________________________________________
Version 1.2.9 - Sep 30, 2014:

Bug Fixes:
- Fixed index/relationships not being detected properly without a column attached.
- Fixed functions definitions not parsing arguments correctly.
- Fixed array variable declarations not being detected properly.

____________________________________________________________________________________________________
Version 1.2.8 - Sep 29, 2014:

Features:
- Added support for numbered tables (dmd1, dmd2, dmd3...)
- Added keywords "typedef", "BEGINHLP" and "ENDHLP".
- Added support for BEGINHLP ... ENDHLP after function declarations.
- Added support for description text on extern functions.
- Added support for columns on relationships.
- Errors are now displayed in a custom dialog.
- Added new commands to navigate to the next/previous reference of the selected item.
- Added completion list for #include file names.

Bug Fixes:
- When the quick-info text is too wide, it will now wrap.
- Create File dialog now limits file length to 16 chars.
- Fixed go-to-brace not working properly all the time.
- Fixed signature help not appearing when typing a comma into a partially completed function call.
- Fixed signature help not parsing arguments correctly when the data type contained '(' char.
- When clearing filter on dictionary explorer, the selected item now remains in view.
- Go-To-Definition now works when on a relationship/index.
- Fixed duplicate index error in scanner database when multiple applications have a class with the
  same name.
- Fixed enum options not being read properly from the WBDK repository when they contain spaces.
- Syntax highlighter now correctly handles nested comments.
- Background scanner will now remove missing files from the database (if the drive is mounted).
- Added support for data types command, section, scroll and graphic.
- Fixed completion list not being displayed after 'return'.

____________________________________________________________________________________________________
Version 1.2.7 - Sep 23, 2014:

Features:
- Added "physical" as a completion option for indexes/relationships.
- Added "formonly" and "tool" as keywords.

Bug Fixes:
- Added 'long' as a data type.
- Array variables are now parsed properly.
- Fixed #define not parsing properly when there's trailing whitespace.
- Fixed functions with prompts, comments or other attributes not being parsed properly.

____________________________________________________________________________________________________
Version 1.2.6 - Sep 22, 2014:

Features:
- Added syntax highlighting for variables.
- Add support for temporary extracts.
- Function descriptions are now displayed in the quick-info and signature help text.
- Quick-info text is now displayed using WPF UIElements, for a better look.

Bug Fixes:
- Improved performance of code modeling.
- Fixed issues with function drop-down not using the correct list.

____________________________________________________________________________________________________
Version 1.2.5 - Sep 18, 2014:

Features:
- Added toolbar icon to launch DK Application Manager (ProbeNV)

Bug Fixes:
- Fixed slow performance/freezing when typing a ',' that's not inside a function call.
- Fixed issue where 'insert diags' wasn't detecting the function name.

____________________________________________________________________________________________________
Version 1.2.4 - Sep 16, 2014:

Features:
- Added support for WBDK classes.
- Added dictionary browser in DK Explorer tool window.
- Global function/class data is now stored in a SQL CE database, rather than a giant XML file.
- Description text for tables, columns and relationships/indexes are now displayed in the quick-info
- Added the keywords public, private and protected.
- Added option to disable switching to error list after a compile with errors or warnings.
- Added signature definition for UNREFERENCED_PARAMETER.
- Changed file header back to the traditional style.
- Editor will now show dead code in gray color (can be disabled via button/menu/options)
- Logging is now written to a file under app-data directory.
- Removed extern variables, because they're no longer supported in WBDK.
- Typing #ifdef or #ifndef will now display an auto-completion list of constants.
- In filter text boxes (file, dictionary explorers) you can now use '|' as an 'or' operator.
  For example, "dmd|loan|term .st" will find anything with the text "dmd", "loan" or "term" and must
  also contain ".st". (dmd.st, loan.st, term.st, but not cust.st)
- Added option to not run DCCMP after the compile. (if you need to run without /z switch)
- Added support for 'like' data types to reference a variable rather than just table.field.

Bug Fixes:
- Signature help now properly ignores commas that aren't parameter delimiters (e.g. enum options)
- Fixed problem with signature help not triggering on opening bracket when other args are present.
- Fixed smart indenting after lines with #include, #replace/#with/#endreplace.

____________________________________________________________________________________________________
Version 1.2.3 - Aug 8, 2014:

Features:
- Added ability to add custom command line args for SAM or CAM.
- CAM command line now passes 'networkname' arg consisting of username and machine name.
- Changed the FEC toolbar icon, to make it look less like the compile one.

____________________________________________________________________________________________________
Version 1.2.2 - Jul 21, 2014:

Bug Fixes:
- Corrected package title to "DkTools2012".
- SAM and CAM are now run under the current application selected.
- Added DK specific extensions.
- Changed compiler status bar messages to use the term "DK" instead of "Probe".

____________________________________________________________________________________________________
Version 1.2.1 - Jun 27, 2014:

Features:
- Added 'Explore' context menu item to files and folders in the DK Explorer.
- Changed default for 'Show Files in Tree' to false, because it's too slow in our environment.
- Added a DK Toolbar button to start the DRV.
- When a compile finishes, if there are errors or warnings, the error list will be displayed.

Bug Fixes:
- Fixed problem with compiler not detecting errors and warnings.
- Switching between DK applications now works.
- SAM port number is no longer hardcoded.
- Changed name of compile output pane to reflect DK.
- Compiler will now detect build failed lines, and numbered linker errors (e.g. LNK2019)
- Cleaned up old Probe menu and toolbar button descriptions/icons.

____________________________________________________________________________________________________
Version 1.2 - Jun 3, 2014:

Features:
- Upgraded to Visual Studio 2012, and moved to DK
  (name changed from ProbeTools2010 to DkTools2012)
- Added new file types .cc, .nc and .sc
- Added a toolbar button to start the DK platform help.
- Added support for stringdefs and typedefs.
- Compile errors/warnings will now appear in the Error List pane.

____________________________________________________________________________________________________
Version 1.1.6 - Apr 17, 2014:

Features:
- Added an option to disable listing all the files in the Probe Explorer tree-view.
  (can be slow if there are many files)
- Quick-info text for macros now includes the macro body text.

Bug Fixes:
- Added support for string data types defined as tring XX'
- Fixed bug where function drop down would not populate until cursor has been moved.
- Fixed bug where keywords wouldn't parse correctly if they were followed by brackets.
- Probe Explorer tree view no longer shows the full path on sub-folders.
- Fixed bug where help text adds a space after '.' tokens.

____________________________________________________________________________________________________
Version 1.1.5 - Mar 14, 2014:

Bug Fixes:
- Fixed parsing problems around select statements.
- Fixed 'go to definition' not working on #include statements.

____________________________________________________________________________________________________
Version 1.1.4 - Mar 11, 2014:
Bug Fixes:
- Fixed parsing of 'like xxx.xxx' tokens when the table.field is not defined.
- Added support for select statements.
- Removed duplicate items from statement completion list.
- Fixed bug when inserting function name in diags, where the wrong function name was often used.

____________________________________________________________________________________________________
Version 1.1.3 - Mar 2, 2014:
Features:
- When pressing F12 on a table, it brings up a PST of that table.  Similarly, when pressing F12 on a
  table field or indrel, it brings up a PST and selects the field.
- Improved the way code is parsed, to support smarter syntax highlighting.

Bug Fixes:
- #define statements now have a better distinction between a macro with arguments and a constants
  that has a body surrounded in brackets.
- When the user presses F12 and no definition can be found, a message saying so will be displayed
  on the status bar.
- Fixed a bug where quick-info on a data type keyword didn't show the underlying type definition.

____________________________________________________________________________________________________
Version 1.1.2 - Feb 27, 2014:
Features:
- In Probe Explorer, added 'Find in Files' menu item when right clicking on a directory.

Bug Fixes:
- When right clicking on file tree item in Probe Explorer, the item will be selected.
- Fixed #defines that use braces for a body and don't collapse to definitions.
- Fixed bad smart indenting for 'case' and 'default' inside a 'switch'.

____________________________________________________________________________________________________
Version 1.1.1 - Feb 26, 2014:
Features:
- When collapsing to definitions, #replace sections will be collapsed, while #with sections will
  remain open.

Bug Fixes:
- Fixed problem with functions under #replace/#with sections not having outlining.
- Word highlighting now works on table.field tokens.
- Word highlighting on a macro definition now matches with the macro calls.
- Fixed 'unsigned X' which was not being detected as a data type.
- Fixed errors that occur when running in an environment where Probe isn't installed.

____________________________________________________________________________________________________
Version 1.1 - Feb 24, 2014:
Features:
- Added smart indenting.
- Constants now have syntax highlighting (appear dark blue) and show quick info.
- Function file scanner now saves the function's data type for enum auto-completion.
- Added quick-info for calls to macros.
- Inserting a diag now includes the function name.
- Added 'clear' button to file filter text box.
- Comments will now collapse to definitions if they occupy more than one line.
- Added support for regions using the comments:
	// #region (region title)
	...
	// #endregion
- When the cursor is placed on a variable, all references to that variable will be shaded.
- Pressing F12 on an #include will open the included file.
- Added option to create a new file from the Probe Explorer via context menu.

Bug Fixes:
- Enum auto-completion after != operator now works.
- Data type of extern function definitions are now found correctly.
- Fixed quick-info for variables defined as 'like table.field'.
- Fixed 'go-to definition' not working when the entire identifier is selected.

____________________________________________________________________________________________________
Version 1.0.5 - Feb 18, 2014:
- Added quick info for table fields, and built-in functions.
- Added enum auto-completion after assignment or comparison operators, return statement,
  switch statement.
- Keyboard shortcut to insert date is now Alt+O, Alt+Y, and to insert diag is Alt+O, Alt+D.
  This is closer to the old ProbeMacros.
- Compile status is now written to the status bar when it starts, succeeds or fails.
- Files with extensions .ic, .id and .ie now appear open as Probe source files.
- Outlining 'Collapse to Definitions' now works.
- Fixed redundant code model refreshing.
- Added menu commands for dccmp and credelix.
- Added menu icons for 'FEC to Visual C' and 'Table Listing'
